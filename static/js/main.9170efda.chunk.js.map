{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goodsSort","goods","visibleGoods","ALPHABET","sort","product1","product2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAwCN,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAK,mBAAhDC,EAAQ,KAAEC,EAAW,KAC5B,EAAoCH,oBAAS,GAAM,mBAA5CI,EAAU,KAAEC,EAAa,KAC1BC,EAhCD,SACLC,EAAgB,GAEf,IADCL,EAAQ,EAARA,SAAUE,EAAU,EAAVA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAUC,GAAQ,OACnCD,EAASE,cAAcD,EAAS,IAClC,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAUC,GAAQ,OACnCD,EAASI,OAASH,EAASG,MAAM,IAGrC,KAAKlB,EAASI,MAShB,OAJIG,GACFI,EAAaQ,UAGRR,CACT,CAKoBS,CAChBnB,EAAiB,CAAEI,WAAUE,eAoB/B,OACE,sBAAKc,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAASY,WAEtCY,QA1BiB,WACvBlB,EAAYN,EAASY,SACvB,EAwBkC,SAC3B,wBAID,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAASiB,SAEtCO,QAjCa,WACnBlB,EAAYN,EAASiB,OACvB,EA+B8B,SACvB,mBAID,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAxCQ,WACdhB,GAAc,SAAAiB,GAAI,OAAKA,CAAI,GAC7B,EAsCyB,SAClB,aAIClB,GAAcF,IAAaL,EAASI,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZlB,EAAYN,EAASI,MACrBI,GAAc,EAChB,EA0CyB,SAChB,aAML,6BACGC,EAAUiB,KAAI,SAACC,GAAI,OAAK,oBAAe,UAAQ,OAAM,SAAEA,GAAtBA,EAAgC,QAI1E,ECnIAC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,Q","file":"static/js/main.9170efda.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((product1, product2) => (\n        product1.localeCompare(product2)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((product1, product2) => (\n        product1.length - product2.length));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const goodsSort = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  const sortAlpabeticaly = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortAlpabeticaly}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsSort.map((good) => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}